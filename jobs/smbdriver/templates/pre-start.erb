#!/bin/bash
<% if p("disable") %>
<% else %>

set -eo pipefail

function copy_client_certs_to_spec_dir() {
  local cert_dir="<%= p('driver_path') %>/certs/smbdriver"

  mkdir -p ${cert_dir}
  cp -p /var/vcap/jobs/smbdriver/config/certs/ca.crt ${cert_dir}
  cp -p /var/vcap/jobs/smbdriver/config/certs/client.crt ${cert_dir}
  cp -p /var/vcap/jobs/smbdriver/config/certs/client.key ${cert_dir}
}

function prepend_rfc3339_datetime() {
  perl -ne 'BEGIN { use Time::HiRes "time"; use POSIX "strftime"; STDOUT->autoflush(1) }; my $t = time; my $fsec = sprintf ".%09d", ($t-int($t))*1000000000; my $time = strftime("[%Y-%m-%dT%H:%M:%S".$fsec."Z]", localtime $t); print("$time $_")'
}

function install_if_missing ()
{
    echo "Installing $1"

    set +eo pipefail
    dpkg -s $1 2>&1
    dpkg_installed=$(echo $?)
    if [ "$dpkg_installed" != "0" ]; then
        for x in `seq 1 100` :
        do
          dpkg --force-confdef -i $2 2>&1
          if [ $? -ne 0 ] ; then
            sleep 3
          else
           set -eo pipefail
           return 0
          fi
        done
        set -eo pipefail
        lsof -n
        exit 1
    else
        echo "Skipping $1"
    fi
    set -eo pipefail
}

function install_runtime_dependencies() {
    codename=$(lsb_release -c | cut -f 2 )
    case ${codename} in
    "xenial")
         echo "No reports suggest SMB keyutils are required for xenial"
     ;;
    "jammy")
         (
         echo "Installing SMB keyutils for jammy"
         flock -x 200
         install_if_missing keyutils /var/vcap/packages/smb-debs/jammy/keyutils_1.6.1-2ubuntu3_amd64.deb
         ) 200>/var/vcap/data/dpkg.lock
     ;;
    "bionic")
         (
         flock -x 200
         echo "Installing SMB keyutils for bionic"
         install_if_missing keyutils /var/vcap/packages/smb-debs/bionic/keyutils_1.5.9-9.2ubuntu2_amd64.deb
         ) 200>/var/vcap/data/dpkg.lock
     ;;
    esac
}

function main() {
    echo "Installing runtime dependencies"
    install_runtime_dependencies

    echo "Installing mount.cifs"
    pushd /var/vcap/packages/cifs-utils/
      cp mount.cifs /sbin/
    popd

    echo "Installed mount.cifs"

    echo "Copying client certs to data directory..."
    copy_client_certs_to_spec_dir

    exit 0
}

main | prepend_rfc3339_datetime
<% end %>
